{"ast":null,"code":"var _jsxFileName = \"D:\\\\SU25\\\\SDN302 - HOANNN\\\\Shopii-Template\\\\front-end\\\\src\\\\pages\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaPlus, FaArrowLeft } from 'react-icons/fa';\nimport { useLocation } from 'react-router-dom';\nimport ConversationList from '../../components/chat-component/ConversationList';\nimport MessageList from '../../components/chat-component/MessageList';\nimport MessageInput from '../../components/chat-component/MessageInput';\nimport UserSearch from '../../components/chat-component/UserSearch';\nimport { fetchConversations, fetchMessages, setActiveConversation, startConversation } from '../../features/chat/chatSlice';\nimport { initSocketConnection, joinConversation, leaveConversation, sendMessage as socketSendMessage, sendTypingStatus, markAsRead } from '../../services/socketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    conversations,\n    activeConversation,\n    messages,\n    loading\n  } = useSelector(state => state.chat);\n  const user = useSelector(state => state.auth.user);\n  const [showNewChat, setShowNewChat] = useState(false);\n  const [socket, setSocket] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [showConversations, setShowConversations] = useState(true);\n\n  // Check if we're on mobile view\n  useEffect(() => {\n    const checkIfMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    checkIfMobile();\n    window.addEventListener('resize', checkIfMobile);\n    return () => {\n      window.removeEventListener('resize', checkIfMobile);\n    };\n  }, []);\n\n  // Connect to socket on component mount\n  useEffect(() => {\n    const newSocket = initSocketConnection();\n    setSocket(newSocket);\n\n    // Fetch all conversations\n    dispatch(fetchConversations());\n    return () => {\n      if (activeConversation) {\n        leaveConversation(activeConversation);\n      }\n    };\n  }, [dispatch]);\n\n  // Handle initial conversation selection\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.conversationId) {\n      dispatch(setActiveConversation(location.state.conversationId));\n    }\n  }, [location.state, dispatch]);\n\n  // Join conversation room when active conversation changes\n  useEffect(() => {\n    if (!activeConversation || !socket) return;\n\n    // Fetch messages for the active conversation\n    dispatch(fetchMessages(activeConversation));\n\n    // Join the conversation room\n    joinConversation(activeConversation);\n\n    // Mark unread messages as read\n    const conversationMessages = messages[activeConversation] || [];\n    const unreadMessages = conversationMessages.filter(msg => !msg.read && msg.sender !== user.id).map(msg => msg._id);\n    if (unreadMessages.length > 0) {\n      markAsRead(activeConversation, unreadMessages);\n    }\n\n    // Mobile: Switch to message view\n    if (isMobile) {\n      setShowConversations(false);\n    }\n    return () => {\n      leaveConversation(activeConversation);\n    };\n  }, [activeConversation, socket, dispatch, messages, user, isMobile]);\n  const handleSelectConversation = conversationId => {\n    dispatch(setActiveConversation(conversationId));\n  };\n  const handleSendMessage = function (content) {\n    let imageData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (!activeConversation) return;\n    if (!content.trim() && !imageData) return;\n\n    // Find the conversation\n    const conversation = conversations.find(c => c._id === activeConversation);\n    if (!conversation) return;\n    const messageData = {\n      content: content.trim(),\n      recipientId: conversation.participant._id,\n      conversationId: activeConversation\n    };\n\n    // Add image data if available\n    if (imageData) {\n      messageData.image = {\n        public_id: imageData.public_id,\n        url: imageData.url,\n        secure_url: imageData.secure_url\n      };\n    }\n    socketSendMessage(messageData);\n  };\n  const handleTyping = isTyping => {\n    if (!activeConversation) return;\n    sendTypingStatus(activeConversation, isTyping);\n  };\n  const handleSelectUser = user => {\n    dispatch(startConversation(user._id));\n    setShowNewChat(false);\n  };\n  const handleBackToList = () => {\n    setShowConversations(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto my-8 h-[calc(100vh-200px)] bg-white rounded-lg shadow-lg overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-full\",\n      children: [(!isMobile || showConversations) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:w-1/3 h-full border-r border-gray-200 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-4 border-b border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"p-2 bg-blue-600 text-white rounded-full\",\n            onClick: () => setShowNewChat(!showNewChat),\n            children: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), showNewChat && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(UserSearch, {\n            onSelectUser: handleSelectUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: loading && !conversations.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 text-center text-gray-500\",\n            children: \"Loading conversations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ConversationList, {\n            onSelectConversation: handleSelectConversation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), (!isMobile || !showConversations) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:w-2/3 h-full flex flex-col\",\n        children: activeConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center p-4 border-b border-gray-200\",\n            children: [isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mr-3 p-1 rounded-full hover:bg-gray-200\",\n              onClick: handleBackToList,\n              children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {\n                className: \"text-gray-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), conversations.find(c => c._id === activeConversation) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-10 h-10 rounded-full bg-gray-300 mr-3 flex items-center justify-center overflow-hidden\",\n                children: (() => {\n                  const activeConv = conversations.find(c => c._id === activeConversation);\n                  const participant = activeConv === null || activeConv === void 0 ? void 0 : activeConv.participant;\n                  if (participant !== null && participant !== void 0 && participant.avatarURL) {\n                    return /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: participant.avatarURL,\n                      alt: participant.username || 'User',\n                      className: \"w-full h-full object-cover\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 31\n                    }, this);\n                  } else {\n                    var _participant$fullname, _participant$username;\n                    return /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-lg font-bold text-gray-600\",\n                      children: (participant === null || participant === void 0 ? void 0 : (_participant$fullname = participant.fullname) === null || _participant$fullname === void 0 ? void 0 : _participant$fullname[0]) || (participant === null || participant === void 0 ? void 0 : (_participant$username = participant.username) === null || _participant$username === void 0 ? void 0 : _participant$username[0]) || '?'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 31\n                    }, this);\n                  }\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-medium\",\n                  children: (() => {\n                    const activeConv = conversations.find(c => c._id === activeConversation);\n                    const participant = activeConv === null || activeConv === void 0 ? void 0 : activeConv.participant;\n                    return (participant === null || participant === void 0 ? void 0 : participant.fullname) || (participant === null || participant === void 0 ? void 0 : participant.username) || 'Unknown User';\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n            conversationId: activeConversation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            onSendMessage: handleSendMessage,\n            onTyping: handleTyping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center p-4 text-center text-gray-500\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-4 text-lg\",\n              children: \"Select a conversation or start a new one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-600 text-white py-2 px-4 rounded-lg\",\n              onClick: () => setShowNewChat(true),\n              children: \"Start New Conversation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"wx3e7myE6QNfPad7wbYVfiKIpfs=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","FaPlus","FaArrowLeft","useLocation","ConversationList","MessageList","MessageInput","UserSearch","fetchConversations","fetchMessages","setActiveConversation","startConversation","initSocketConnection","joinConversation","leaveConversation","sendMessage","socketSendMessage","sendTypingStatus","markAsRead","Chat","dispatch","location","conversations","activeConversation","messages","loading","state","chat","user","auth","showNewChat","setShowNewChat","socket","setSocket","isMobile","setIsMobile","showConversations","setShowConversations","checkIfMobile","window","innerWidth","addEventListener","removeEventListener","newSocket","conversationId","conversationMessages","unreadMessages","filter","msg","read","sender","id","map","_id","length","handleSelectConversation","handleSendMessage","content","imageData","trim","conversation","find","c","messageData","recipientId","participant","image","public_id","url","secure_url","handleTyping","isTyping","handleSelectUser","handleBackToList","activeConv","avatarURL","username","fullname"],"sources":["D:/SU25/SDN302 - HOANNN/Shopii-Template/front-end/src/pages/Chat/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaPlus, FaArrowLeft } from 'react-icons/fa';\nimport { useLocation } from 'react-router-dom';\n\nimport ConversationList from '../../components/chat-component/ConversationList';\nimport MessageList from '../../components/chat-component/MessageList';\nimport MessageInput from '../../components/chat-component/MessageInput';\nimport UserSearch from '../../components/chat-component/UserSearch';\n\nimport {\n  fetchConversations,\n  fetchMessages,\n  setActiveConversation,\n  startConversation\n} from '../../features/chat/chatSlice';\n\nimport {\n  initSocketConnection,\n  joinConversation,\n  leaveConversation,\n  sendMessage as socketSendMessage,\n  sendTypingStatus,\n  markAsRead\n} from '../../services/socketService';\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { conversations, activeConversation, messages, loading } = useSelector(state => state.chat);\n  const user = useSelector(state => state.auth.user);\n  \n  const [showNewChat, setShowNewChat] = useState(false);\n  const [socket, setSocket] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [showConversations, setShowConversations] = useState(true);\n  \n  // Check if we're on mobile view\n  useEffect(() => {\n    const checkIfMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkIfMobile();\n    window.addEventListener('resize', checkIfMobile);\n    \n    return () => {\n      window.removeEventListener('resize', checkIfMobile);\n    };\n  }, []);\n  \n  // Connect to socket on component mount\n  useEffect(() => {\n    const newSocket = initSocketConnection();\n    setSocket(newSocket);\n    \n    // Fetch all conversations\n    dispatch(fetchConversations());\n    \n    return () => {\n      if (activeConversation) {\n        leaveConversation(activeConversation);\n      }\n    };\n  }, [dispatch]);\n  \n  // Handle initial conversation selection\n  useEffect(() => {\n    if (location.state?.conversationId) {\n      dispatch(setActiveConversation(location.state.conversationId));\n    }\n  }, [location.state, dispatch]);\n  \n  // Join conversation room when active conversation changes\n  useEffect(() => {\n    if (!activeConversation || !socket) return;\n    \n    // Fetch messages for the active conversation\n    dispatch(fetchMessages(activeConversation));\n    \n    // Join the conversation room\n    joinConversation(activeConversation);\n    \n    // Mark unread messages as read\n    const conversationMessages = messages[activeConversation] || [];\n    const unreadMessages = conversationMessages\n      .filter(msg => !msg.read && msg.sender !== user.id)\n      .map(msg => msg._id);\n    \n    if (unreadMessages.length > 0) {\n      markAsRead(activeConversation, unreadMessages);\n    }\n    \n    // Mobile: Switch to message view\n    if (isMobile) {\n      setShowConversations(false);\n    }\n    \n    return () => {\n      leaveConversation(activeConversation);\n    };\n  }, [activeConversation, socket, dispatch, messages, user, isMobile]);\n  \n  const handleSelectConversation = (conversationId) => {\n    dispatch(setActiveConversation(conversationId));\n  };\n  \n  const handleSendMessage = (content, imageData = null) => {\n    if (!activeConversation) return;\n    if (!content.trim() && !imageData) return;\n    \n    // Find the conversation\n    const conversation = conversations.find(c => c._id === activeConversation);\n    if (!conversation) return;\n    \n    const messageData = {\n      content: content.trim(),\n      recipientId: conversation.participant._id,\n      conversationId: activeConversation\n    };\n    \n    // Add image data if available\n    if (imageData) {\n      messageData.image = {\n        public_id: imageData.public_id,\n        url: imageData.url,\n        secure_url: imageData.secure_url\n      };\n    }\n    \n    socketSendMessage(messageData);\n  };\n  \n  const handleTyping = (isTyping) => {\n    if (!activeConversation) return;\n    sendTypingStatus(activeConversation, isTyping);\n  };\n  \n  const handleSelectUser = (user) => {\n    dispatch(startConversation(user._id));\n    setShowNewChat(false);\n  };\n  \n  const handleBackToList = () => {\n    setShowConversations(true);\n  };\n  \n  return (\n    <div className=\"max-w-6xl mx-auto my-8 h-[calc(100vh-200px)] bg-white rounded-lg shadow-lg overflow-hidden\">\n      <div className=\"flex h-full\">\n        {/* Left sidebar - Conversations list */}\n        {(!isMobile || showConversations) && (\n          <div className=\"w-full md:w-1/3 h-full border-r border-gray-200 flex flex-col\">\n            <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n              <h2 className=\"text-lg font-semibold\">Messages</h2>\n              <button \n                className=\"p-2 bg-blue-600 text-white rounded-full\"\n                onClick={() => setShowNewChat(!showNewChat)}\n              >\n                <FaPlus />\n              </button>\n            </div>\n            \n            {/* Search for new users */}\n            {showNewChat && (\n              <div className=\"p-4 border-b border-gray-200\">\n                <UserSearch onSelectUser={handleSelectUser} />\n              </div>\n            )}\n            \n            {/* Conversations list */}\n            <div className=\"flex-1 overflow-y-auto\">\n              {loading && !conversations.length ? (\n                <div className=\"p-4 text-center text-gray-500\">\n                  Loading conversations...\n                </div>\n              ) : (\n                <ConversationList onSelectConversation={handleSelectConversation} />\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Right area - Messages */}\n        {(!isMobile || !showConversations) && (\n          <div className=\"w-full md:w-2/3 h-full flex flex-col\">\n            {activeConversation ? (\n              <>\n                {/* Chat header */}\n                <div className=\"flex items-center p-4 border-b border-gray-200\">\n                  {isMobile && (\n                    <button \n                      className=\"mr-3 p-1 rounded-full hover:bg-gray-200\"\n                      onClick={handleBackToList}\n                    >\n                      <FaArrowLeft className=\"text-gray-600\" />\n                    </button>\n                  )}\n                  \n                  {conversations.find(c => c._id === activeConversation) && (\n                    <>\n                      <div className=\"w-10 h-10 rounded-full bg-gray-300 mr-3 flex items-center justify-center overflow-hidden\">\n                        {(() => {\n                          const activeConv = conversations.find(c => c._id === activeConversation);\n                          const participant = activeConv?.participant;\n                          \n                          if (participant?.avatarURL) {\n                            return (\n                              <img \n                                src={participant.avatarURL} \n                                alt={participant.username || 'User'} \n                                className=\"w-full h-full object-cover\"\n                              />\n                            );\n                          } else {\n                            return (\n                              <span className=\"text-lg font-bold text-gray-600\">\n                                {participant?.fullname?.[0] || participant?.username?.[0] || '?'}\n                              </span>\n                            );\n                          }\n                        })()}\n                      </div>\n                      <div>\n                        <h3 className=\"font-medium\">\n                          {(() => {\n                            const activeConv = conversations.find(c => c._id === activeConversation);\n                            const participant = activeConv?.participant;\n                            return participant?.fullname || participant?.username || 'Unknown User';\n                          })()}\n                        </h3>\n                      </div>\n                    </>\n                  )}\n                </div>\n                \n                {/* Messages */}\n                <MessageList conversationId={activeConversation} />\n                \n                {/* Message input */}\n                <MessageInput \n                  onSendMessage={handleSendMessage}\n                  onTyping={handleTyping}\n                />\n              </>\n            ) : (\n              <div className=\"flex-1 flex items-center justify-center p-4 text-center text-gray-500\">\n                <div>\n                  <p className=\"mb-4 text-lg\">Select a conversation or start a new one</p>\n                  <button\n                    className=\"bg-blue-600 text-white py-2 px-4 rounded-lg\"\n                    onClick={() => setShowNewChat(true)}\n                  >\n                    Start New Conversation\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}