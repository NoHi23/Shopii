{"ast":null,"code":"import { api } from '../index'; // Ensure api is properly configured to handle requests\nclass AuthenService {\n  async register(data) {\n    try {\n      const response = await api.post('user/register', data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async login(data) {\n    try {\n      const response = await api.post('user/login', data);\n      if (response.data.accessToken) {\n        localStorage.setItem('token', response.data.accessToken);\n        localStorage.setItem('accessToken', response.data.accessToken);\n        localStorage.setItem('refreshToken', response.data.refreshToken);\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async forgotPassword(email) {\n    try {\n      const response = await api.post('user/forgot-password', {\n        email\n      });\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  }\n  async resetPassword(token, password) {\n    try {\n      const response = await api.post(`user/reset-password/${token}`, {\n        password,\n        token\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async verifyEmail(otp, email) {\n    try {\n      const response = await api.get('user/verify-email', {\n        params: {\n          otp,\n          email\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async resendVerificationEmail(email) {\n    try {\n      const response = await api.get('user/resend-verification-email', {\n        params: {\n          email\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async updateProfile(data) {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await api.put('user/profile', data, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async changePassword(data) {\n    try {\n      const response = await api.put('user/change-password', data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async getProfile() {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await api.get(`user/profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async logout() {\n    try {\n      const token = localStorage.getItem('token');\n      // Try to notify the backend about logout\n      try {\n        await api.post('user/logout', {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n      } catch (e) {\n        console.log('Error during server logout, continuing with local logout', e);\n      }\n\n      // Clear all auth-related data from localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n\n      // Clear any session/cookie data if needed\n      document.cookie.split(\";\").forEach(function (c) {\n        document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n      });\n      return {\n        success: true,\n        message: 'Logged out successfully'\n      };\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Even if there's an error, try to clear tokens\n      localStorage.removeItem('token');\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      throw error;\n    }\n  }\n  async refreshToken() {\n    try {\n      const response = await api.post('user/refresh-token', {}, {\n        withCredentials: true\n      });\n      if (response.data.accessToken) {\n        localStorage.setItem('accessToken', response.data.accessToken);\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\nexport default new AuthenService();","map":{"version":3,"names":["api","AuthenService","register","data","response","post","error","login","accessToken","localStorage","setItem","refreshToken","forgotPassword","email","resetPassword","token","password","verifyEmail","otp","get","params","resendVerificationEmail","updateProfile","getItem","put","headers","Authorization","changePassword","getProfile","logout","withCredentials","e","console","log","removeItem","document","cookie","split","forEach","c","replace","Date","toUTCString","success","message"],"sources":["D:/SU25/SDN302 - HOANNN/Shopii-Template/front-end/src/services/api/AuthenService.js"],"sourcesContent":["import { api } from '../index'; // Ensure api is properly configured to handle requests\nclass AuthenService {\n    async register(data) {\n        try {\n            const response = await api.post('user/register', data);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async login(data) {\n        try {\n            const response = await api.post('user/login', data);\n            if (response.data.accessToken) {\n                localStorage.setItem('token', response.data.accessToken);\n                localStorage.setItem('accessToken', response.data.accessToken);\n                localStorage.setItem('refreshToken', response.data.refreshToken);\n            }\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async forgotPassword(email) {\n        try {\n            const response = await api.post('user/forgot-password', { email });\n            return response.data;\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n\n    async resetPassword(token, password) {\n        try {\n            const response = await api.post(`user/reset-password/${token}`, { password, token });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async verifyEmail(otp, email) {\n        try {\n            const response = await api.get('user/verify-email', { params: { otp, email } });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async resendVerificationEmail(email) {\n        try {\n            const response = await api.get('user/resend-verification-email', { params: { email } });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async updateProfile(data) {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await api.put('user/profile', data, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async changePassword(data) {\n        try {\n            const response = await api.put('user/change-password', data);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async getProfile() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await api.get(`user/profile`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n    async logout() {\n        try {\n            const token = localStorage.getItem('token');\n            // Try to notify the backend about logout\n            try {\n                await api.post('user/logout', {}, {\n                    headers: { Authorization: `Bearer ${token}` },\n                    withCredentials: true,\n                });\n            } catch (e) {\n                console.log('Error during server logout, continuing with local logout', e);\n            }\n            \n            // Clear all auth-related data from localStorage\n            localStorage.removeItem('token');\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n            \n            // Clear any session/cookie data if needed\n            document.cookie.split(\";\").forEach(function(c) {\n                document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n            });\n            \n            return { success: true, message: 'Logged out successfully' };\n        } catch (error) {\n            console.error('Logout error:', error);\n            // Even if there's an error, try to clear tokens\n            localStorage.removeItem('token');\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n            throw error;\n        }\n    }\n\n    async refreshToken() {\n        try {\n            const response = await api.post('user/refresh-token', {}, { withCredentials: true });\n            if (response.data.accessToken) {\n                localStorage.setItem('accessToken', response.data.accessToken);\n            }\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n}\n\nexport default new AuthenService();\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU,CAAC,CAAC;AAChC,MAAMC,aAAa,CAAC;EAChB,MAAMC,QAAQ,CAACC,IAAI,EAAE;IACjB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,eAAe,EAAEF,IAAI,CAAC;MACtD,OAAOC,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMC,KAAK,CAACJ,IAAI,EAAE;IACd,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,YAAY,EAAEF,IAAI,CAAC;MACnD,IAAIC,QAAQ,CAACD,IAAI,CAACK,WAAW,EAAE;QAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACD,IAAI,CAACK,WAAW,CAAC;QACxDC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEN,QAAQ,CAACD,IAAI,CAACK,WAAW,CAAC;QAC9DC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEN,QAAQ,CAACD,IAAI,CAACQ,YAAY,CAAC;MACpE;MACA,OAAOP,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMM,cAAc,CAACC,KAAK,EAAE;IACxB,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,sBAAsB,EAAE;QAAEQ;MAAM,CAAC,CAAC;MAClE,OAAOT,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,OAAOA,KAAK,CAACF,QAAQ,CAACD,IAAI;IAC9B;EACJ;EAEA,MAAMW,aAAa,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACjC,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAE,uBAAsBU,KAAM,EAAC,EAAE;QAAEC,QAAQ;QAAED;MAAM,CAAC,CAAC;MACpF,OAAOX,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMW,WAAW,CAACC,GAAG,EAAEL,KAAK,EAAE;IAC1B,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,mBAAmB,EAAE;QAAEC,MAAM,EAAE;UAAEF,GAAG;UAAEL;QAAM;MAAE,CAAC,CAAC;MAC/E,OAAOT,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMe,uBAAuB,CAACR,KAAK,EAAE;IACjC,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,gCAAgC,EAAE;QAAEC,MAAM,EAAE;UAAEP;QAAM;MAAE,CAAC,CAAC;MACvF,OAAOT,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMgB,aAAa,CAACnB,IAAI,EAAE;IACtB,IAAI;MACA,MAAMY,KAAK,GAAGN,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMnB,QAAQ,GAAG,MAAMJ,GAAG,CAACwB,GAAG,CAAC,cAAc,EAAErB,IAAI,EAAE;QACjDsB,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASX,KAAM;QAAE;MAChD,CAAC,CAAC;MACF,OAAOX,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMqB,cAAc,CAACxB,IAAI,EAAE;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACwB,GAAG,CAAC,sBAAsB,EAAErB,IAAI,CAAC;MAC5D,OAAOC,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMsB,UAAU,GAAG;IACf,IAAI;MACA,MAAMb,KAAK,GAAGN,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMnB,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAE,cAAa,EAAE;QAC3CM,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASX,KAAM;QAAE;MAChD,CAAC,CAAC;MACF,OAAOX,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EACA,MAAMuB,MAAM,GAAG;IACX,IAAI;MACA,MAAMd,KAAK,GAAGN,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;MAC3C;MACA,IAAI;QACA,MAAMvB,GAAG,CAACK,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE;UAC9BoB,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASX,KAAM;UAAE,CAAC;UAC7Ce,eAAe,EAAE;QACrB,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,GAAG,CAAC,0DAA0D,EAAEF,CAAC,CAAC;MAC9E;;MAEA;MACAtB,YAAY,CAACyB,UAAU,CAAC,OAAO,CAAC;MAChCzB,YAAY,CAACyB,UAAU,CAAC,aAAa,CAAC;MACtCzB,YAAY,CAACyB,UAAU,CAAC,cAAc,CAAC;;MAEvC;MACAC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAASC,CAAC,EAAE;QAC3CJ,QAAQ,CAACC,MAAM,GAAGG,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,YAAY,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,GAAG,SAAS,CAAC;MAC9G,CAAC,CAAC;MAEF,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAE;MAA0B,CAAC;IAChE,CAAC,CAAC,OAAOtC,KAAK,EAAE;MACZ0B,OAAO,CAAC1B,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;MACAG,YAAY,CAACyB,UAAU,CAAC,OAAO,CAAC;MAChCzB,YAAY,CAACyB,UAAU,CAAC,aAAa,CAAC;MACtCzB,YAAY,CAACyB,UAAU,CAAC,cAAc,CAAC;MACvC,MAAM5B,KAAK;IACf;EACJ;EAEA,MAAMK,YAAY,GAAG;IACjB,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,EAAE;QAAEyB,eAAe,EAAE;MAAK,CAAC,CAAC;MACpF,IAAI1B,QAAQ,CAACD,IAAI,CAACK,WAAW,EAAE;QAC3BC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEN,QAAQ,CAACD,IAAI,CAACK,WAAW,CAAC;MAClE;MACA,OAAOJ,QAAQ,CAACD,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;AAEJ;AAEA,eAAe,IAAIL,aAAa,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}