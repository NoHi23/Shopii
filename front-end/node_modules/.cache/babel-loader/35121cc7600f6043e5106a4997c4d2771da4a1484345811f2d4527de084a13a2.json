{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:9999';\n\n// Async thunk for fetching user profile\nexport const fetchUserProfile = createAsyncThunk('profile/fetchUserProfile', async (_, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const token = localStorage.getItem('token') || localStorage.getItem('accessToken');\n    if (!token) {\n      return rejectWithValue('No authentication token found');\n    }\n    const response = await axios.get(`${API_BASE_URL}/api/buyers/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    // Handle different response structures\n    if (response.data.success && response.data.user) {\n      return response.data.user;\n    } else if (response.data.data) {\n      return response.data.data;\n    } else if (response.data._id) {\n      return response.data;\n    } else {\n      return rejectWithValue('Invalid response format from server');\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n  }\n});\n\n// Async thunk for updating user profile\nexport const updateUserProfile = createAsyncThunk('profile/updateUserProfile', async (userData, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const token = localStorage.getItem('token') || localStorage.getItem('accessToken');\n    if (!token) {\n      return rejectWithValue('No authentication token found');\n    }\n    const response = await axios.put(`${API_BASE_URL}/api/buyers/profile`, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    // Handle different response structures\n    if (response.data.success && response.data.user) {\n      return response.data.user;\n    } else if (response.data.data) {\n      return response.data.data;\n    } else if (response.data._id) {\n      return response.data;\n    } else {\n      return rejectWithValue('Invalid response format from server');\n    }\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message);\n  }\n});\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null,\n  updateSuccess: false,\n  updateLoading: false,\n  updateError: null\n};\nconst profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    clearProfileErrors: state => {\n      state.error = null;\n      state.updateError = null;\n    },\n    resetUpdateStatus: state => {\n      state.updateSuccess = false;\n      state.updateError = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch profile cases\n    .addCase(fetchUserProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Update profile cases\n    .addCase(updateUserProfile.pending, state => {\n      state.updateLoading = true;\n      state.updateError = null;\n      state.updateSuccess = false;\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      state.updateLoading = false;\n      state.user = action.payload;\n      state.updateSuccess = true;\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.updateLoading = false;\n      state.updateError = action.payload;\n      state.updateSuccess = false;\n    });\n  }\n});\nexport const {\n  clearProfileErrors,\n  resetUpdateStatus\n} = profileSlice.actions;\nexport default profileSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE_URL","process","env","REACT_APP_API_URL","fetchUserProfile","_","rejectWithValue","token","localStorage","getItem","response","get","headers","Authorization","data","success","user","_id","error","message","updateUserProfile","userData","put","initialState","loading","updateSuccess","updateLoading","updateError","profileSlice","name","reducers","clearProfileErrors","state","resetUpdateStatus","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["D:/SU25/SDN302 - HOANNN/Shopii-Template/front-end/src/features/profile/profileSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:9999';\r\n\r\n// Async thunk for fetching user profile\r\nexport const fetchUserProfile = createAsyncThunk(\r\n  'profile/fetchUserProfile',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token') || localStorage.getItem('accessToken');\r\n      \r\n      if (!token) {\r\n        return rejectWithValue('No authentication token found');\r\n      }\r\n      \r\n      const response = await axios.get(`${API_BASE_URL}/api/buyers/profile`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      // Handle different response structures\r\n      if (response.data.success && response.data.user) {\r\n        return response.data.user;\r\n      } else if (response.data.data) {\r\n        return response.data.data;\r\n      } else if (response.data._id) {\r\n        return response.data;\r\n      } else {\r\n        return rejectWithValue('Invalid response format from server');\r\n      }\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk for updating user profile\r\nexport const updateUserProfile = createAsyncThunk(\r\n  'profile/updateUserProfile',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token') || localStorage.getItem('accessToken');\r\n      \r\n      if (!token) {\r\n        return rejectWithValue('No authentication token found');\r\n      }\r\n      \r\n      const response = await axios.put(\r\n        `${API_BASE_URL}/api/buyers/profile`,\r\n        userData,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      // Handle different response structures\r\n      if (response.data.success && response.data.user) {\r\n        return response.data.user;\r\n      } else if (response.data.data) {\r\n        return response.data.data;\r\n      } else if (response.data._id) {\r\n        return response.data;\r\n      } else {\r\n        return rejectWithValue('Invalid response format from server');\r\n      }\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n  updateSuccess: false,\r\n  updateLoading: false,\r\n  updateError: null\r\n};\r\n\r\nconst profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    clearProfileErrors: (state) => {\r\n      state.error = null;\r\n      state.updateError = null;\r\n    },\r\n    resetUpdateStatus: (state) => {\r\n      state.updateSuccess = false;\r\n      state.updateError = null;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch profile cases\r\n      .addCase(fetchUserProfile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(fetchUserProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Update profile cases\r\n      .addCase(updateUserProfile.pending, (state) => {\r\n        state.updateLoading = true;\r\n        state.updateError = null;\r\n        state.updateSuccess = false;\r\n      })\r\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\r\n        state.updateLoading = false;\r\n        state.user = action.payload;\r\n        state.updateSuccess = true;\r\n      })\r\n      .addCase(updateUserProfile.rejected, (state, action) => {\r\n        state.updateLoading = false;\r\n        state.updateError = action.payload;\r\n        state.updateSuccess = false;\r\n      });\r\n  }\r\n});\r\n\r\nexport const { clearProfileErrors, resetUpdateStatus } = profileSlice.actions;\r\n\r\nexport default profileSlice.reducer; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}